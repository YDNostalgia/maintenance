<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--&lt;!&ndash;    将realm交给spring管理&ndash;&gt;-->
<!--    <bean id="userRealm" class="com.gxa.shiro.MyStatelessRealm">-->
<!--        <property name="credentialsMatcher">-->
<!--            <bean class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">-->
<!--                <property name="hashAlgorithmName" value="MD5"></property>-->
<!--                <property name="hashIterations" value="1024"></property>-->
<!--            </bean>-->
<!--        </property>-->
<!--    </bean>-->

    <!-- Realm实现 -->
    <bean id="statelessRealm" class="com.gxa.shiro.MyStatelessRealm">
        <property name="cachingEnabled" value="false"/>
    </bean>
    <!-- 禁用掉会话调度器 -->
    <bean id="sessionManager" class="org.apache.shiro.session.mgt.DefaultSessionManager">
        <property name="sessionValidationSchedulerEnabled" value="false"/>
    </bean>
    <!--解决报错，组装默认的subjectDAO-->
    <bean id="subjectDAO" class="org.apache.shiro.mgt.DefaultSubjectDAO">
        <property name="sessionStorageEvaluator" ref="sessionStorageEvaluator"/>
    </bean>
    <bean id="sessionStorageEvaluator" class="org.apache.shiro.mgt.DefaultSessionStorageEvaluator">
        <property name="sessionStorageEnabled" value="false"/>
    </bean>
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="statelessRealm"/>
        <property name="subjectDAO" ref="subjectDAO"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
        <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
    <!-- 开启Shiro注解 -->
    <bean id="defaultAdvisorAutoProxyCreator" class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator">
        <!-- 必须改为true，即使用cglib方式为Action创建代理对象。默认值为false，使用JDK创建代理对象，会造成问题 -->
        <property name="proxyTargetClass" value="true"/>
    </bean>

    <bean id="myStatelessFilter" class="com.gxa.shiro.MyStatelessShiroFilter"/>
    <!-- Shiro的Web过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="filters">
            <map>
                <entry key="statelessAuth" value-ref="myStatelessFilter"/>
            </map>
        </property>
        <property name="loginUrl" value="/login"/>
        <property name="unauthorizedUrl" value="/unauthorized"/>
        <property name="filterChainDefinitions">
            <value>
<!--                /=anon-->
<!--                /checkCode=anon-->
<!--                /**/login=anon-->
<!--                /**/index.html=anon-->
<!--                /**/add=statelessAuth,perms[add,update]-->
<!--                /**/update=statelessAuth,perms[add,update]-->
<!--                /**/state=statelessAuth,perms[add,update,delete]-->
<!--                /**/delete=statelessAuth,perms[add,update,delete]-->
<!--                /statute/list=statelessAuth,perms[glist]-->
<!--                /statute/add=statelessAuth,perms[glist,gadd,gupdate]-->
<!--                /statute/update=statelessAuth,perms[glist,gadd,gupdate]-->
<!--                /statute/delete=statelessAuth,perms[glist,gadd,gupdate,gdelete]-->
<!--                /statuteType/list=statelessAuth,perms[glist]-->
<!--                /statuteType/add=statelessAuth,perms[glist,gadd,gupdate]-->
<!--                /statuteType/update=statelessAuth,perms[glist,gadd,gupdate]-->
<!--                /statuteType/delete=statelessAuth,perms[glist,gadd,gupdate,gdelete]-->
<!--                /data/list=statelessAuth,perms[jlist]-->
<!--                /data/add=statelessAuth,perms[jlist,jadd,jupdate]-->
<!--                /data/update=statelessAuth,perms[jlist,jadd,jupdate]-->
<!--                /data/delete=statelessAuth,perms[jlist,jadd,jupdate,jdelete]-->
<!--                /equipmentData/list=statelessAuth,perms[jlist]-->
<!--                /equipmentData/add=statelessAuth,perms[jlist,jadd,jupdate]-->
<!--                /equipmentData/update=statelessAuth,perms[jlist,jadd,jupdate]-->
<!--                /equipmentData/delete=statelessAuth,perms[jlist,jadd,jupdate,jdelete]-->
<!--                /swagger-ui.html=anon-->
<!--                /webjars/**=anon-->
<!--                /v2/**=anon-->
<!--                /swagger-resources/**=anon-->
<!--                /configuration/**=anon-->
<!--                /**=statelessAuth-->

            </value>
        </property>
    </bean>

</beans>